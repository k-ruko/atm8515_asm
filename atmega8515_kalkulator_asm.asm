;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Mon Jan 11 2021
; Processor: ATmega8515
; Compiler:  AVRASM (Proteus)

; Tutorial Assembly : http://www.rjhcoding.com/avr-asm-tutorials.php

; Specify Device.
.device ATMEGA8515
;====================================================================
; DEFINITIONS
;====================================================================
.equ	exmem_offset=$C000
.equ	ppi_offset=$6000
.equ	ppi_portA=ppi_offset + $0000
.equ	ppi_portB=ppi_offset + $0001
.equ	ppi_portC=ppi_offset + $0002
.equ	ppi_control=ppi_offset + $0003

.equ	ssData=exmem_offset + $000A

		.cseg					; CODE segment.
		.org 0	
		rjmp  init

                 
init:   ldi r16,$DF			; Initialize the stack.
		out SPL,r16
		ldi r16,$A0			; Enable Sleep and SRAM - 0 ws
		out MCUCR,r16	
		ldi	r16,$90		 ; Inisialisasi PPI, PORTA, PORTB = OUTPUT, PORTC = INPUT
		sts ppi_control,r16
		ldi	r16,0
		sts	ssData,r16
		;ldi ssData,0

loop:  		
; -------- Cek Tombol Naik ---------------
		lds	r0,ppi_portA
		sbrc	r0,0
		rjmp	cekTurun	; Tombol Naik tidak di tekan, loncat ke 'cekTurun'
loop1:
		lds	r0,ppi_portA
		sbrs	r0,0
		rjmp	loop1		; Looping selama tombol naik belum dilepas
		inc	r16
		ldi	r17,$0A
		cp	r16,r17
		brne simpan_ssDataN
		ldi r16,9
simpan_ssDataN:
		sts	ssData,r16

; -------- Cek Tombol Turun ---------------
cekTurun:
		lds		r0,ppi_portA
		sbrc	r0,1
		rjmp	loadSS		; Tombol Turun tidak di tekan, loncat ke 'loadss'

loop2:	lds	r0,ppi_portA
		sbrs	r0,1		
		rjmp	loop2		; Looping selama tombol Turun belum dilepas
		dec		r16
		ldi		r17,$FF
		cp		r16,r17
		brne	simpan_ssDataT
		ldi		r16,0
simpan_ssDataT:
		sts	ssData,r16
		
; ------ Kirim ke Seven Segment ------------------
loadSS:
		lds r16,ssData
		ldi	r17,0
		cp	r16,r17
		brne satu
		ldi	r18,0b00111111	; Angka 0
		sts	ppi_PortC,r18
		rjmp exit
satu:	
		ldi	r17,1
		cp	r16,r17
		brne dua
		ldi	r18,0b00000110	; Angka 1
		sts	ppi_PortC,r18
		rjmp exit
dua:	
		ldi	r17,2
		cp	r16,r17
		brne tiga
		ldi	r18,0b01011011	; Angka 2
		sts	ppi_PortC,r18
		rjmp exit
tiga:	
		ldi	r17,3
		cp	r16,r17
		brne empat
		ldi	r18,0b01001111	; Angka 3
		sts	ppi_PortC,r18
		rjmp exit
empat:	
		ldi	r17,4
		cp	r16,r17
		brne lima
		ldi	r18,0b01100110	; Angka 4
		sts	ppi_PortC,r18
		rjmp exit
lima:	
		ldi	r17,5
		cp	r16,r17
		brne enam
		ldi	r18,0b01101101	; Angka 5
		sts	ppi_PortC,r18
		rjmp exit	
enam:	
		ldi	r17,6
		cp	r16,r17
		brne tujuh
		ldi	r18,0b01111101	; Angka 6
		sts	ppi_PortC,r18
		rjmp exit	
tujuh:	
		ldi	r17,7
		cp	r16,r17
		brne delapan
		ldi	r18,0b00000111	; Angka 7
		sts	ppi_PortC,r18
		rjmp exit	
delapan:	
		ldi	r17,8
		cp	r16,r17
		brne sembilan
		ldi	r18,0b01111111	; Angka 8
		sts	ppi_PortC,r18
		rjmp exit
sembilan:	
		ldi	r17,9
		cp	r16,r17
		brne exit
		ldi	r18,0b01101111	; Angka 9
		sts	ppi_PortC,r18
exit:	
		;inc	r16
		;sts	ssData,r16
		rjmp	loop
;====================================================================
